name: Unit 8 – Alerts + Prompts Autograding

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  actions: read

jobs:
  autograding:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Run convertTemp() test
        id: temp
        run: |
          node -e "
            global.__prompts = [];
            global.prompt = (msg) => { global.__prompts.push(String(msg)); return '212'; };
            global.__alerts = [];
            global.alert  = (msg) => { global.__alerts.push(String(msg)); };

            const fs = require('fs');
            const vm = require('vm');
            global.window = global;
            const code = fs.readFileSync('script.js', 'utf8');
            vm.runInThisContext(code, { filename: 'script.js' });

            if (typeof convertTemp !== 'function') {
              console.error('❌ convertTemp() not found');
              process.exit(1);
            }
            convertTemp();

            const expectedPrompt = 'Enter temperature in Fahrenheit';
            const expectedAlert  = 'Temperature in Celsius: 100.00';

            if (!global.__prompts.includes(expectedPrompt)) {
              console.error('❌ Expected prompt:', expectedPrompt, 'got:', global.__prompts);
              process.exit(1);
            }
            if (!global.__alerts.includes(expectedAlert)) {
              console.error('❌ Expected alert:', expectedAlert, 'got:', global.__alerts);
              process.exit(1);
            }
            console.log('✅ convertTemp() passed');
          "

      - name: Run circleArea() test
        id: area
        run: |
          node -e "
            global.__prompts = [];
            global.prompt = (msg) => { global.__prompts.push(String(msg)); return '5'; };
            global.__alerts = [];
            global.alert  = (msg) => { global.__alerts.push(String(msg)); };

            const fs = require('fs');
            const vm = require('vm');
            global.window = global;
            const code = fs.readFileSync('script.js', 'utf8');
            vm.runInThisContext(code, { filename: 'script.js' });

            if (typeof circleArea !== 'function') {
              console.error('❌ circleArea() not found');
              process.exit(1);
            }
            circleArea();

            const expectedPrompt = 'Enter circle radius';
            const expectedAlert  = 'Area of the circle: 78.54';

            if (!global.__prompts.includes(expectedPrompt)) {
              console.error('❌ Expected prompt:', expectedPrompt, 'got:', global.__prompts);
              process.exit(1);
            }
            if (!global.__alerts.includes(expectedAlert)) {
              console.error('❌ Expected alert:', expectedAlert, 'got:', global.__alerts);
              process.exit(1);
            }
            console.log('✅ circleArea() passed');
          "

      - name: Report results to GitHub Classroom
        if: always()
        uses: education/autograding@v1
