name: Unit 8 – Alerts + Prompts Autograding

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  actions: read

jobs:
  autograding:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Create the autograder config ON THE FLY (not committed to the repo)
      - name: Generate Classroom autograding config
        run: |
          mkdir -p .github/classroom
          cat > .github/classroom/autograding.json <<'JSON'
          {
            "tests": [
              {
                "name": "convertTemp() – 212°F → \"Temperature in Celsius: 100.00\" (prompt text exact)",
                "setup": "echo \"No setup\"",
                "run": "node -e \"global.__prompts=[];global.prompt=(m)=>{global.__prompts.push(String(m));return '212'};global.__alerts=[];global.alert=(m)=>{global.__alerts.push(String(m))};const fs=require('fs');const vm=require('vm');global.window=global;const code=fs.readFileSync('script.js','utf8');vm.runInThisContext(code,{filename:'script.js'});if(typeof convertTemp!=='function'){console.error('convertTemp() not found');process.exit(1)};convertTemp();if(!global.__prompts.includes('Enter temperature in Fahrenheit')){console.error('Expected prompt: Enter temperature in Fahrenheit; got: '+JSON.stringify(global.__prompts));process.exit(1)};if(!global.__alerts.includes('Temperature in Celsius: 100.00')){console.error('Expected alert: Temperature in Celsius: 100.00; got: '+JSON.stringify(global.__alerts));process.exit(1)};\"",
                "timeout": 20,
                "points": 50
              },
              {
                "name": "circleArea() – r=5 → \"Area of the circle: 78.54\" (prompt text exact)",
                "setup": "",
                "run": "node -e \"global.__prompts=[];global.prompt=(m)=>{global.__prompts.push(String(m));return '5'};global.__alerts=[];global.alert=(m)=>{global.__alerts.push(String(m))};const fs=require('fs');const vm=require('vm');global.window=global;const code=fs.readFileSync('script.js','utf8');vm.runInThisContext(code,{filename:'script.js'});if(typeof circleArea!=='function'){console.error('circleArea() not found');process.exit(1)};circleArea();if(!global.__prompts.includes('Enter circle radius')){console.error('Expected prompt: Enter circle radius; got: '+JSON.stringify(global.__prompts));process.exit(1)};if(!global.__alerts.includes('Area of the circle: 78.54')){console.error('Expected alert: Area of the circle: 78.54; got: '+JSON.stringify(global.__alerts));process.exit(1)};\"",
                "timeout": 20,
                "points": 50
              }
            ]
          }
          JSON

      # Run the official GitHub Classroom autograder (reads the JSON we just generated)
      - name: Run GitHub Classroom Autograding
        uses: education/autograding@v1
